@page
@* @model RazorPages.Pages.Admin.Tasks.AddOrEditModel *@
@{
    Layout = null;
}


<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .container {
            margin-top: 50px;
            max-width: 600px;
            background-color: #f8f9fa;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-left: auto;
            margin-right: auto;
        }

        .question {
            margin-bottom: 30px;
        }

        .feedback {
            display: none;
        }

        .success-message {
            background-color: #d4edda;
            border-color: #c3e6cb;
            color: #155724;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 10px;
        }

        .error-message {
            background-color: #f8d7da;
            border-color: #f5c6cb;
            color: #721c24;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 10px;
        }

        /* Styles pour l'horloge */
        #timer {
            font-size: 24px;
            text-align: center;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="text-center mb-4">Test technique</h1>
        <form id="testForm">
            <div class="question">
                <p>Question 1: What is the main difference between supervised learning and unsupervised learning?</p>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q1" value="labeled" id="q1Labeled" checked>
                    <label class="form-check-label" for="q1Labeled">Supervised learning uses labeled data to train a model, while unsupervised learning discovers patterns in unlabeled data.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q1" value="structures" id="q1Structures">
                    <label class="form-check-label" for="q1Structures">Unsupervised learning discovers structures in data without labels.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q1" value="errors" id="q1Errors">
                    <label class="form-check-label" for="q1Errors">Supervised learning is prone to errors.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q1" value="none" id="q1None">
                    <label class="form-check-label" for="q1None">There is no difference between supervised and unsupervised learning.</label>
                </div>
                <div class="feedback mt-2" id="q1Feedback"></div>
            </div>

            <div class="question">
                <p>Question 2: What is a neural network?</p>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q2" value="brain" id="q2Brain">
                    <label class="form-check-label" for="q2Brain">A model inspired by the functioning of the human brain, consisting of interconnected layers of neurons.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q2" value="software" id="q2Software" checked>
                    <label class="form-check-label" for="q2Software">A type of software used to play chess.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q2" value="robot" id="q2Robot">
                    <label class="form-check-label" for="q2Robot">A type of robot designed for deep sea exploration.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q2" value="none" id="q2None">
                    <label class="form-check-label" for="q2None">A form of transportation.</label>
                </div>
                <div class="feedback mt-2" id="q2Feedback"></div>
            </div>

            <div class="question">
                <p>Question 3: What is backpropagation?</p>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q3" value="training" id="q3Training" checked>
                    <label class="form-check-label" for="q3Training">An algorithm used to train neural networks by adjusting the weights of connections to minimize error.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q3" value="error" id="q3Error">
                    <label class="form-check-label" for="q3Error">An error that occurs during machine learning experiments.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q3" value="feedback" id="q3Feedback">
                    <label class="form-check-label" for="q3Feedback">A type of feedback provided to users in web applications.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q3" value="measurement" id="q3Measurement">
                    <label class="form-check-label" for="q3Measurement">A method used to measure the performance of machine learning models.</label>
                </div>
                <div class="feedback mt-2" id="q3Feedback"></div>
            </div>

            <div class="question">
                <p>Question 4: How is the performance of a machine learning model measured?</p>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q4" value="accuracy" id="q4Accuracy">
                    <label class="form-check-label" for="q4Accuracy">By metrics such as accuracy, recall, precision, etc., depending on the task and data.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q4" value="speed" id="q4Speed">
                    <label class="form-check-label" for="q4Speed">By the speed at which the model makes predictions.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q4" value="size" id="q4Size" checked>
                    <label class="form-check-label" for="q4Size">By the size of the dataset used for training.</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="q4" value="color" id="q4Color">
                    <label class="form-check-label" for="q4Color">By the color of the model's interface.</label>
                </div>
                <div class="feedback mt-2" id="q4Feedback"></div>
            </div>

            <button type="button" class="btn btn-primary mt-3" onclick="checkAnswers()">Submit</button>
        </form>

        <div class="modal" id="resultModal" style="display: none;">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Test Result</h5>
                        <button type="button" class="close" onclick="closeModal()" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" id="modalBody"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" onclick="closeModal()">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <div id="timer">30:00</div>
    </div>

    <script>
        var timerInterval;
        var timeLeft = 1800; // 30 minutes en secondes

        function startTimer() {
            if (timerInterval) {
                clearInterval(timerInterval); // Arrêter le chronomètre s'il est déjà en cours
            }

            // Mettre à jour l'horloge chaque seconde
            timerInterval = setInterval(function() {
                var minutes = Math.floor(timeLeft / 60);
                var seconds = timeLeft % 60;

                // Formater le temps restant
                var timeString = minutes.toString().padStart(2, '0') + ':' + seconds.toString().padStart(2, '0');

                // Mettre à jour l'élément HTML affichant le temps restant
                document.getElementById('timer').textContent = timeString;

                // Vérifier si le temps est écoulé
                if (timeLeft === 0) {
                    clearInterval(timerInterval); // Arrêter le chronomètre
                    alert("Le temps est écoulé !");
                } else {
                    timeLeft--; // Décrémenter le temps restant
                }
            }, 1000); // Mettre à jour toutes les secondes
        }

        var score = 0;
        var totalQuestions = 4;

        function checkAnswers() {
            score = 0;
            var q1Answer = document.querySelector('input[name="q1"]:checked').value;
            var q2Answer = document.querySelector('input[name="q2"]:checked').value;
            var q3Answer = document.querySelector('input[name="q3"]:checked').value;
            var q4Answer = document.querySelector('input[name="q4"]:checked').value;

            if (q1Answer === 'labeled') {
                score += 1;
            }
            if (q2Answer === 'brain') {
                score += 1;
            }
            if (q3Answer === 'training') {
                score += 1;
            }
            if (q4Answer === 'accuracy') {
                score += 1;
            }

            displayModalResult();
        }

        function displayModalResult() {
            var percentage = (score / totalQuestions) * 100;
            var modalBody = document.getElementById('modalBody');
            modalBody.innerHTML = '<p>Score : ' + score + '/' + totalQuestions + '</p>';
            modalBody.innerHTML += '<p>Percentage : ' + percentage.toFixed(2) + '%</p>';
            if (percentage >= 60) {
                modalBody.innerHTML += '<div class="success-message">🙂  Congratulations! You have successfully passed the technical test! You now have the opportunity to proceed to the HR interview.Please select a suitable date for you to schedule the interview.</div>';
                modalBody.innerHTML += '<button type="button" class="btn btn-primary" onclick="chooseDate()">Choose a Date</button>';
            } else {
                modalBody.innerHTML += '<div class="error-message">😢 Unfortunately, you did not pass the test.</div>';
            }
            var modal = document.getElementById('resultModal');
            modal.style.display = 'block';
        }

        function closeModal() {
            var modal = document.getElementById('resultModal');
            modal.style.display = 'none';
        }

        function chooseDate() {
            window.location.href = "/Interview/Index";
            var modal = document.getElementById('resultModal');
            modal.style.display = 'none';
        }

        // Lancer le chronomètre au chargement de la page
        startTimer();
    </script>
</body>
</html>

